---
- name: Facts
  block:

  - name: Get instances facts
    ec2_instance_facts:
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      region: "{{ region }}"
    register: result

  - name: Instances ID
    debug:
      msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
    loop: "{{ result.instances }}"

  tags: always


- name: Provisioning EC2 instances
  block:

  - name: Upload public key to AWS
    ec2_key:
      name: "{{ key_name }}"
      key_material: "{{ lookup('file', '/Users/aksarav/.ssh/{{ key_name }}.pub') }}"
      region: "{{ region }}"
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"

  - name: Create security group
    ec2_group:
      name: "{{ sec_group }}"
      description: "Sec group for app {{ id }}"
      # vpc_id: 12345
      region: "{{ region }}"
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      rules:
        - proto: tcp
          ports:
            - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on ssh port
        - proto: tcp
          ports:
            - 8001
          cidr_ip: 0.0.0.0/0
          rule_desc: Admin Console URL
        - proto: tcp
          ports:
            - 5556
          cidr_ip: 0.0.0.0/0
          rule_desc: NodeManager Port
    register: result_sec_group

  - name: Provision instance(s)
    ec2:
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      key_name: "{{ key_name }}"
      id: "{{ id }}"
      group_id: "{{ result_sec_group.group_id }}"
      image: "{{ image }}"
      instance_type: t2.medium
      region: "{{ region }}"
      wait: true
      count: 2
      # exact_count: 2
      count_tag:
          Name: App
      instance_tags:
          Name: Weblogic
    register: launchedec2

  - name: Add the launched Hosts to HostGroup
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: launched
    loop: "{{ launchedec2.instances }}"

  - name: Wait for SSH to come up
    local_action:
      module: wait_for
      host: "{{ item.public_ip }}"
      port: 22
      delay: 10
      timeout: 120
    loop: "{{ launchedec2.instances }}"

  tags: ['always','create_ec2']
